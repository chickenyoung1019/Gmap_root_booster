name: Apply patch from Issue (always run)

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  apply-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: read

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - id: extract
        name: Extract patch from body (fence optional)
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const fs = require('fs');
            const body = context.payload.comment ? (context.payload.comment.body || '') : (context.payload.issue.body || '');
            let patch = '';

            // ① フェンス付き ```diff/patch を優先
            const m = body.match(/```(?:diff|patch)\n([\s\S]*?)```/);
            if (m) {
              patch = m[1];
            } else {
              // ② フェンスなしでも OK
              const i = body.indexOf('--- ');
              if (i >= 0) patch = body.slice(i);
            }

            patch = patch.replace(/\r\n/g, '\n').trim();
            if (!patch) core.setFailed('No patch block found (fenced or unfenced).');

            fs.writeFileSync('incoming.patch', patch, 'utf8');
            core.setOutput('branch', `patch/${context.runId}`);

      - name: Apply patch and push
        run: |
          set -e
          git config user.email "actions@github.com"
          git config user.name "github-actions[bot]"
          BRANCH="${{ steps.extract.outputs.branch }}"
          git checkout -b "$BRANCH"
          if git apply -p0 --whitespace=fix incoming.patch; then
            echo "Patch applied."
          else
            echo "Some hunks failed; creating .rej files..."
            git apply -p0 --reject incoming.patch || true
          fi
          git add -A || true
          if git diff --cached --quiet; then
            echo "No changes to commit"; exit 0
          fi
          git commit -m "Apply patch from issue/comment"
          git push --set-upstream origin "$BRANCH"

      - name: Open PR
        uses: actions/github-script@v7
        with:
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            await github.rest.pulls.create({
              owner, repo,
              title: 'Apply patch from issue/comment',
              head: '${{ steps.extract.outputs.branch }}',
              base: 'main',
              body: 'Automated PR from patch in the issue/comment.'
            });
