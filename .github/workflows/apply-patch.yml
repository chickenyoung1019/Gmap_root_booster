name: Apply .patch on push

on:
  push:
    paths:
      - 'patches/*.patch'

jobs:
  apply-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Find latest patch file in this push
        id: pick
        run: |
          set -e
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
            | grep '^patches/.*\.patch$' | tail -n1 > PATCH_FILE || true
          if [ ! -s PATCH_FILE ]; then
            echo "No patch file changed. Exiting."; exit 1
          fi
          FILE=$(cat PATCH_FILE)
          echo "file=$FILE" >> $GITHUB_OUTPUT
          echo "Picked patch: $FILE"

      - name: Create branch and apply patch
        id: branch
        run: |
          set -e
          git config user.email "actions@github.com"
          git config user.name "github-actions[bot]"
          BRANCH="patch/${GITHUB_RUN_ID}"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          git checkout -b "$BRANCH"

          PATCH="${{ steps.pick.outputs.file }}"
          echo "Applying $PATCH"
          if git apply -p0 --whitespace=fix "$PATCH"; then
            echo "Applied with -p0"
          elif git apply -p1 --whitespace=fix "$PATCH"; then
            echo "Applied with -p1"
          else
            echo "Patch failed"; exit 1
          fi

          git add -A
          git commit -m "Apply patch: $PATCH"
          git push --set-upstream origin "$BRANCH"

      - name: Open PR
        uses: actions/github-script@v7
        with:
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            await github.rest.pulls.create({
              owner, repo,
              title: 'Apply patch from patches/',
              head: '${{ steps.branch.outputs.branch }}',
              base: 'main',
              body: 'Automated PR created from a .patch file in patches/.'
            });
