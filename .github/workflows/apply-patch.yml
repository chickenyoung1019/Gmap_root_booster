name: Apply patch from Issue (no label needed)

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  apply-patch:
    # Issue/コメント本文に ```diff or ```patch があれば実行
    if: >
      (github.event_name == 'issues' &&
       (contains(github.event.issue.body, '```diff') || contains(github.event.issue.body, '```patch')))
      || (github.event_name == 'issue_comment' &&
          (contains(github.event.comment.body, '```diff') || contains(github.event.comment.body, '```patch')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: read

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - id: extract
        name: Extract patch from body
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const fs = require('fs');
            const body = context.payload.comment ? context.payload.comment.body : context.payload.issue.body;
            const m = body && body.match(/```(?:diff|patch)\n([\s\S]*?)```/);
            if (!m) core.setFailed('No ```diff``` or ```patch``` block found.');
            fs.writeFileSync('incoming.patch', m[1], 'utf8');
            core.setOutput('branch', `patch/${context.runId}`);

      - name: Apply patch and push
        run: |
          set -e
          git config user.email "actions@github.com"
          git config user.name "github-actions[bot]"
          BRANCH="${{ steps.extract.outputs.branch }}"
          git checkout -b "$BRANCH"
          # リポジトリ直下パス（-p0）
          if git apply -p0 --whitespace=fix incoming.patch; then
            echo "Patch applied."
          else
            echo "Some hunks failed; creating .rej files..."
            git apply -p0 --reject incoming.patch || true
          fi
          git add -A || true
          if git diff --cached --quiet; then
            echo "No changes to commit"; exit 0
          fi
          git commit -m "Apply patch from issue/comment"
          git push --set-upstream origin "$BRANCH"

      - name: Open PR
        uses: actions/github-script@v7
        with:
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            await github.rest.pulls.create({
              owner, repo,
              title: 'Apply patch from issue/comment',
              head: '${{ steps.extract.outputs.branch }}',
              base: 'main',   // ← main 以外ならここを変更
              body: 'Automated PR from patch in the issue/comment.'
            });
